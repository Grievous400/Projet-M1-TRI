version: '3.9'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: your_root_password
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  wordpress1:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "8080:80"
    environment:
      WAIT_HOSTS: db:3306
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: your_user
      WORDPRESS_DB_PASSWORD: your_password
      WORDPRESS_DB_NAME: wordpress
    labels:
      - "traefik.http.routers.wordpress1.rule=Host(`claudel-tri.usmb-tri.fr`)"
      - "traefik.http.services.wordpress1.loadbalancer.server.port=80"


  wordpress2:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "8081:80"
    environment:
      WAIT_HOSTS: db:3306
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: your_user2
      WORDPRESS_DB_PASSWORD: your_password2
      WORDPRESS_DB_NAME: wordpress2
    labels:
      - "traefik.http.routers.wordpress2.rule=Host(`durand-tri.usmb-tri.fr`)"
      - "traefik.http.services.wordpress2.loadbalancer.server.port=80"


  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true 
      - --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8085:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
